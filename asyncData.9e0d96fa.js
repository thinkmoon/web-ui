import{L as k,r as y,M,N as C,O as B,u as z,P as A}from"./entry.37edf189.js";const E=()=>null;function j(...i){var m,_,v,D,P,g,b,w,x;const u=typeof i[i.length-1]=="string"?i.pop():void 0;typeof i[0]!="string"&&i.unshift(u);let[n,c,e={}]=i;if(typeof n!="string")throw new TypeError("[nuxt] [asyncData] key must be a string.");if(typeof c!="function")throw new TypeError("[nuxt] [asyncData] handler must be a function.");e.server=(m=e.server)!=null?m:!0,e.default=(_=e.default)!=null?_:E,e.defer&&console.warn("[useAsyncData] `defer` has been renamed to `lazy`. Support for `defer` will be removed in RC."),e.lazy=(D=(v=e.lazy)!=null?v:e.defer)!=null?D:!1,e.initialCache=(P=e.initialCache)!=null?P:!0,e.immediate=(g=e.immediate)!=null?g:!0;const a=k(),d=()=>(a.isHydrating||e.initialCache)&&a.payload.data[n]!==void 0;a._asyncData[n]||(a._asyncData[n]={data:y(d()?a.payload.data[n]:(w=(b=e.default)==null?void 0:b.call(e))!=null?w:null),pending:y(!d()),error:y((x=a.payload._errors[n])!=null?x:null)});const r={...a._asyncData[n]};r.refresh=r.execute=(s={})=>{if(a._asyncDataPromises[n]){if(s.dedupe===!1)return a._asyncDataPromises[n];a._asyncDataPromises[n].cancelled=!0}if(s._initial&&d())return a.payload.data[n];r.pending.value=!0;const o=new Promise((t,l)=>{try{t(c(a))}catch(f){l(f)}}).then(t=>{if(o.cancelled)return a._asyncDataPromises[n];e.transform&&(t=e.transform(t)),e.pick&&(t=H(t,e.pick)),r.data.value=t,r.error.value=null}).catch(t=>{var l,f;if(o.cancelled)return a._asyncDataPromises[n];r.error.value=t,r.data.value=z((f=(l=e.default)==null?void 0:l.call(e))!=null?f:null)}).finally(()=>{o.cancelled||(r.pending.value=!1,a.payload.data[n]=r.data.value,r.error.value&&(a.payload._errors[n]=!0),delete a._asyncDataPromises[n])});return a._asyncDataPromises[n]=o,a._asyncDataPromises[n]};const p=()=>r.refresh({_initial:!0}),O=e.server!==!1&&a.payload.serverRendered;{const s=A();if(s&&!s._nuxtOnBeforeMountCbs){s._nuxtOnBeforeMountCbs=[];const t=s._nuxtOnBeforeMountCbs;s&&(M(()=>{t.forEach(l=>{l()}),t.splice(0,t.length)}),C(()=>t.splice(0,t.length)))}O&&a.isHydrating&&n in a.payload.data?r.pending.value=!1:s&&(a.payload.serverRendered&&a.isHydrating||e.lazy)&&e.immediate?s._nuxtOnBeforeMountCbs.push(p):e.immediate&&p(),e.watch&&B(e.watch,()=>r.refresh());const o=a.hook("app:data:refresh",t=>{if(!t||t.includes(n))return r.refresh()});s&&C(o)}const h=Promise.resolve(a._asyncDataPromises[n]).then(()=>r);return Object.assign(h,r),h}function H(i,u){const n={};for(const c of u)n[c]=i[c];return n}export{j as u};
